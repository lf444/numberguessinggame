{"version":3,"sources":["models/number.model.ts","coeur.png","heart2.png","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Diffculty","getDisplayName","diff","facile","normal","difficile","App","classes","useStyles","useState","diffculter","setDifficulter","vie","setVie","points","setPoints","nbparti","setNbParti","essaie","setEssaie","precPartieCourante","setPrecPartieCourante","toHigh","setToHigh","toLow","setToLow","win","setwin","lose","setLose","PointPrec","setPointPrecedent","setHScore","getRandomInt","min","max","Math","ceil","floor","random","objectif","setObjectif","handleAddPrec","ess","newtab","concat","jouer","handleReset","useEffect","className","Typography","coeur","i","push","img","src","LogoImg","img2","NbVie","Select","variant","style","marginTop","marginBottom","label","id","name","value","onChange","e","target","handleChangeDifficulty","Object","values","map","MenuItem","btn","TextField","type","backgroundColor","marginRight","InputProps","inputProps","onKeyPress","ev","console","log","key","preventDefault","handleChangeEssaie","Button","onClick","disabled","color","fontSize","bottom","makeStyles","alignItems","display","margin","submit","position","right","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2a895f5.chunk.js","sourcesContent":["export enum Diffculty {\r\n  facile = \"100\",\r\n  normal = \"500\",\r\n  difficile = \"1000\",\r\n}\r\n\r\nexport function getDisplayName(diff: string): string {\r\n  switch (diff) {\r\n    case Diffculty.facile:\r\n      return \"facile\";\r\n    case Diffculty.normal:\r\n      return \"normal\";\r\n    case Diffculty.difficile:\r\n      return \"difficile\";\r\n    default:\r\n      return \"facile%\";\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/coeur.6f00a23b.png\";","export default __webpack_public_path__ + \"static/media/heart2.4ce7fbfb.png\";","import { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Diffculty, getDisplayName } from \"./models/number.model\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport LogoImg from \"./coeur.png\";\r\nimport img2 from \"./heart2.png\";\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  const [diffculter, setDifficulter] = useState<Diffculty>(Diffculty.facile);\r\n  const [vie, setVie] = useState<number>(10);\r\n  const [points, setPoints] = useState<number>(0);\r\n  const [nbparti, setNbParti] = useState<number>(1);\r\n  const [essaie, setEssaie] = useState<any>(\"\");\r\n  const [precPartieCourante, setPrecPartieCourante] = useState<string[]>([]);\r\n  const [toHigh, setToHigh] = useState<boolean>(false);\r\n  const [toLow, setToLow] = useState<boolean>(false);\r\n  const [win, setwin] = useState<boolean>(false);\r\n  const [lose, setLose] = useState<boolean>(false);\r\n  const [PointPrec, setPointPrecedent] = useState<number>(0);\r\n  const [HighestScore, setHScore] = useState<number>(0);\r\n\r\n  function getRandomInt() {\r\n    let min: number = 1;\r\n    let max: number = +diffculter;\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n  const [objectif, setObjectif] = useState<number>(getRandomInt());\r\n  const NbVie = (vie: number) => {\r\n    let coeur = [];\r\n    for(let i= 0; i < vie; i++) {\r\n      coeur.push(<img className={classes.img} src={LogoImg}/>);\r\n    }\r\n    for(let i= 0; i < 10 - vie; i++) {\r\n      coeur.push(<img className={classes.img} src={img2}/>);\r\n    }\r\n    \r\n\r\n    return (\r\n      <div>{coeur}</div>\r\n    );\r\n  };\r\n  const handleChangeDifficulty = (\r\n    e: React.ChangeEvent<{ name?: string | undefined; value: unknown }>\r\n  ) => {\r\n    const value: any = e.target.value;\r\n    setDifficulter(value);\r\n  };\r\n\r\n  const handleChangeEssaie = (\r\n    e: React.ChangeEvent<{ name?: string | undefined; value: unknown }>\r\n  ) => {\r\n    const value: any = e.target.value;\r\n    setEssaie(+value);\r\n  };\r\n  const handleAddPrec = (ess: string) => {\r\n    const newtab: string[] = precPartieCourante.concat([ess]);\r\n    setPrecPartieCourante(newtab);\r\n  };\r\n  const jouer = () => {\r\n    if (essaie !== \"\") {\r\n      if (vie > 0) {\r\n        setToHigh(false);\r\n        setToLow(false);\r\n        setLose(false);\r\n        setwin(false);\r\n        if (vie > 1) {\r\n          handleAddPrec(essaie + \", \");\r\n        } else {\r\n          handleAddPrec(essaie + \".\");\r\n        }\r\n\r\n        if (+essaie < +objectif) {\r\n          setToLow(true);\r\n          setEssaie(\"\");\r\n          setVie(vie - 1);\r\n        }\r\n        if (+essaie > +objectif) {\r\n          setToHigh(true);\r\n          setEssaie(\"\");\r\n          setVie(vie - 1);\r\n        }\r\n        if (+essaie === +objectif) {\r\n          setPoints(vie * +diffculter);\r\n          setwin(true);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setNbParti(nbparti + 1);\r\n    setVie(10);\r\n    setPoints(0);\r\n    setEssaie(\"\");\r\n    setPrecPartieCourante([]);\r\n    setObjectif(getRandomInt());\r\n    setwin(false);\r\n    setToHigh(false);\r\n    setToLow(false);\r\n    setLose(false);\r\n    setNbParti(0);\r\n  };\r\n\r\n  const handleResetHARD = () => {\r\n    setNbParti(0);\r\n    setVie(10);\r\n    setPoints(0);\r\n    setEssaie(\"\");\r\n    setPrecPartieCourante([]);\r\n    setObjectif(getRandomInt());\r\n    setwin(false);\r\n    setToHigh(false);\r\n    setToLow(false);\r\n    setLose(false);\r\n    setNbParti(0);\r\n  };\r\n  const handleStop = () => {\r\n    setNbParti(nbparti + 1);\r\n    setVie(10);\r\n    setPoints(0);\r\n    setPointPrecedent(points);\r\n    setHScore(points > PointPrec ? points : PointPrec);\r\n    setEssaie(\"\");\r\n    setPrecPartieCourante([]);\r\n    setObjectif(getRandomInt());\r\n    setwin(false);\r\n    setToHigh(false);\r\n    setToLow(false);\r\n    setLose(false);\r\n    setNbParti(0);\r\n  };\r\n\r\n  const handleContinuer = () => {\r\n    setNbParti(nbparti + 1);\r\n    setVie(10);\r\n    setPoints(PointPrec+points);\r\n    setPointPrecedent(points);\r\n    setHScore(points > PointPrec ? points : PointPrec);\r\n    setEssaie(\"\");\r\n    setPrecPartieCourante([]);\r\n    setObjectif(getRandomInt());\r\n    setwin(false);\r\n    setToHigh(false);\r\n    setToLow(false);\r\n    setLose(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleReset();\r\n  }, [diffculter]);\r\n\r\n  useEffect(() => {\r\n   if(vie ===0){\r\n    setLose(true);\r\n    setPoints(0);\r\n    setToHigh(false);\r\n    setToLow(false);\r\n   }\r\n  }, [vie]);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Number guessing game</h1>\r\n      <Typography>\r\n        We have selected a random number. See if you can guess beteween 1 and{\" \"}\r\n        {diffculter}\r\n      </Typography>\r\n      {nbparti > 1 ? (\r\n        <Typography>C'est votre {nbparti}éme partie d'affilé !</Typography>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n      {nbparti > 1 ? (\r\n        <Typography>Highest score {PointPrec} !</Typography>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n      <Typography>Nb de points : {points}</Typography>\r\n      <Typography>{NbVie(vie) }</Typography>\r\n      <Typography>Vos try : {precPartieCourante}</Typography>\r\n\r\n      <Select\r\n        variant=\"outlined\"\r\n        style={{ marginTop: \"5px\", marginBottom: \"5px\" }}\r\n        label=\"diffculter\"\r\n        id=\"diffculter\"\r\n        name=\"diffculter\"\r\n        value={diffculter}\r\n        className=\"text\"\r\n        onChange={(e) => handleChangeDifficulty(e)}\r\n      >\r\n        {Object.values(Diffculty).map((value: any) => {\r\n          return (\r\n            <MenuItem key={value} value={value}>\r\n              {getDisplayName(value)}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n      <div className={classes.btn}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"number\"\r\n          style={{ backgroundColor: \"white\", marginRight: \"10px\" }}\r\n          id=\"essaie\"\r\n          InputProps={{\r\n            inputProps: {\r\n              max: +diffculter,\r\n              min: 1,\r\n            },\r\n          }}\r\n          onKeyPress={(ev) => {\r\n            console.log(`Pressed keyCode ${ev.key}`);\r\n            if (ev.key === \"Enter\") {\r\n              jouer();\r\n              ev.preventDefault();\r\n            }\r\n          }}\r\n          value={essaie}\r\n          onChange={(e) => handleChangeEssaie(e)}\r\n        ></TextField>\r\n        <Button\r\n          onClick={() => {\r\n            jouer();\r\n          }}\r\n          disabled={vie < 1 || win || lose}\r\n          style={{ backgroundColor: \"white\" }}\r\n        >\r\n          TRY\r\n        </Button>\r\n      </div>\r\n      {toLow ? (\r\n        <Typography style={{ color: \"blue\",fontSize:\"24px\" }}>trop bas </Typography>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n      {toHigh ? (\r\n        <Typography style={{ color: \"yellow\",fontSize:\"24px\" }}>trop haut </Typography>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n      {win ? (\r\n        <Typography style={{ color: \"green\",fontSize:\"24px\" }}>c gagné le nombre était {objectif} </Typography>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n      {lose ? (\r\n        <Typography style={{ color: \"red\",fontSize:\"24px\" }}>c perdu le nombre était {objectif} </Typography>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n      {lose ? (\r\n        <Button\r\n          onClick={() => {\r\n            handleReset();\r\n          }}\r\n          style={{ backgroundColor: \"white\" }}\r\n        >\r\n          Recommencer ?\r\n        </Button>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n      {win ? (\r\n        <Button\r\n          onClick={() => {\r\n            handleStop();\r\n          }}\r\n          style={{ backgroundColor: \"white\" }}\r\n        >\r\n          Stop ?\r\n        </Button>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n      {win ? (\r\n        <Button\r\n          onClick={() => {\r\n            handleContinuer();\r\n          }}\r\n          style={{ backgroundColor: \"white\" }}\r\n        >\r\n          Continuer ?\r\n        </Button>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n\r\n      {nbparti > 1 ? (\r\n        <Button\r\n          className={classes.bottom}\r\n          onClick={() => {\r\n            handleResetHARD();\r\n          }}\r\n          style={{ backgroundColor: \"white\" }}\r\n        >\r\n          RESET HARD ?\r\n        </Button>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  btn: {\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    margin: \"2%\",\r\n  },\r\n  submit: {\r\n    fontSize: \"40px\",\r\n  },\r\n  bottom: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n  img: {\r\n    margin:\"2px\",\r\n    width: \"20px\",\r\n    height:\"20px\",\r\n\r\n  },\r\n}));\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}